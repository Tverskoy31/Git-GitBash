1. Сделать папку dir_1
mkdir dir_1
# ok

 2. Зайти в папку dir_1
cd dir_1
# ok

 3. Создать папку inner_dir_1
mkdir inner_dir_1
# ok

 4. Посмотреть где ты находишься
ls -la
# ok

 5. Находясь в папке dir_1 создать пустой текстовый файл tf_1.txt
cat > tf_1.txt, затем выход из режима редактирования Ctrl+C
# можно, но не оптимально. "идеологически верный" способ создания пустого файла: touch tf_1.txt
/// приму к сведению ///

 6. Находясь в папке dir_1 через команду cat создать текстовый файл tf_2.txt со следующими строками:
- the first 1
- the second 2
- the third 3

cat > tf_2.txt
- the first 1
- the second 2
- the third 3
затем Enter и выход из режима редактирования Ctrl+C
# ok

 7. Зайти в папку inner_dir_1
cd inner_dir_1
# ok

 8. Через cat сделать текстовый файл tf_3.txt  c любыми строками
cat > tf_3.txt
шышел
мышел
пернул
вышел
затем Enter и выход из режима редактирования Ctrl+C
# ok. Но есть еще один хороший способ добавления нескольких строк в файл, который называется Here Documents.
# рекомендую ознакомиться, это может быть полезно, например, для использования cat в скриптах
///
cat <<'EOF' > file_test.txt
Priet
Medved
EOF
///
 9. Через cat добавить в текстовый файл tf_3.txt строку “the second 2”
cat >> tf_3.txt
the second 2
# можно, но не оптимально. Если нужно добавить онемного строк в файл то лучше сделать так: echo 'the second 2' >> tf_3.txt
///echo 'the second 2' >> tf_3.txt///

10. Через cat добавить в текстовый файл tf_3.txt строку “the sec 2”
the sec 2
затем Enter и выход из режима редактирования Ctrl+C
# тут Вы ошиблись в тексте, но смысл понятен. Комментарий тот же что и к предыдущему пункту
/// echo 'the sec 2' >> tf_3.txt

 11. Через cat добавить в текстовый файл tf_2.txt строку “the sec 3”
cd ../
$ cat >> tf_2.txt
the sec 3
затем Enter и выход из режима редактирования Ctrl+C
# да, но нет :) во-первых лучше использовать echo, во-вторых не нужно выходить из текущей папки.
# погуглите, пожалуйста, про абсолютные и относительные пути к файлам. очень много наших сокурсников или не знают, или не понимают что это.
# а между тем это фундаментальные основы, как мне кажется.
///echo 'the sec3' >> tf_2.txt///

 12. Через cat добавить в текстовый файл tf_3.txt строку “the SeCoNd 2”
cat >>tf_3.txt
the SeCoNd 2
затем Enter и выход из режима редактирования Ctrl+C
# да, с учетом предыдущих комментариев. Но Ваша команда не сработает ожидаемым образом, так как Вы в предыдущей команде ушли на уровень выше в цепочке каталогов.
# то есть нас просят доавить строку в файл dir_1/inner_dir_1/tf_3.txt
# а ваша команда создаст новый файл dir_1/tf_3.txt
//////echo 'the SeCoNd 2' >> tf_3.txt//////

 13. Через cat добавить в текстовый файл tf_2.txt строку “the seConD 2”
cat >> tf_2.txt
the seConD 2
затем Enter и выход из режима редактирования Ctrl+C
# ok, с учетом предыдущих комментариев
//////echo 'the SeCoNd 2' >> tf_2.txt//////

 14. Сделать текстовый файл tf_4.txt в котором будет 15 строк.
 cat > tf_.txt
1 строка
2 строка
3 строка
4 строка
5 строка
6 строка
7 строка
8 строка
9 строка
10 строка
11 строка
12 строка
13 строка
14 строка
15 строка
затем Enter и выход из режима редактирования Ctrl+C
# Это самый простой способ создания файла с 15 строками. Но мне кажется что от нас ожидают "более другого" решения задачи.
# Можно решить задачу одной командой в одну строку. Например, используя echo или printf и расширение {}
///echo -e "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n6 строка\n7 строка\n8 строка\n9 строка\n10 строка\n11 строка\n12 строка\n13 строка\n14 строка\n15 строка" > tf_4.txt///
 
15. Сделать текстовый файл tF_5.txt в котором будет 13 строк.
cat > tF_5.txt
1 строка
2 строка
3 строка
4 строка
5 строка
6 строка
7 строка
8 строка
9 строка
10 строка
11 строка
12 строка
13 строка
затем Enter и выход из режима редактирования Ctrl+C
# ок, но см. предыдущий комментарий
///echo -e "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n6 строка\n7 строка\n8 строка\n9 строка\n10 строка\n11 строка\n12 строка\n13 строка\" > tf_5.txt///

 16. Вывести список всех файлов в папке.
ls -la
# ок.

 17. Выйти из папки inner_dir_1
cd ../
# ok. Только в одном из предыдущих шагов Вы уже вышли из inner_dir_1

 18. Вывести содержимое файла tf_3.txt в терминал.
cat inner_dir_1/tf_3.txt
# ok

 19. Найти путь к файлу tf_4.txt
find -name "tf_4.txt" -print
# ok. Но по-моему опция -print тут лишняя, т.к. она используется по умолчанию.
# и еще нужно понимать что так мы получим относительный путь, а не абсолютный.
/// realpath tf_4.txt///

 20. Отчистить файл tf_4.txt от содержимого без удаления самого файла.
> inner_dir_1/tf_4.txt
# ok

 21. Найти путь к файлам у которых есть  “tf” в названии.
find . -name 'tf*'
# почти. при таком шаблоне найдутся файлы, имя которых НАЧИНАЕТСЯ с tf. Нас же прося файлы где есть tf в любом месте
/// find . -name '*tf*' ///

 22. Найти путь к файлам у которых есть  “tf” в названии и буквы в любом регистре.
find . -iname 'tf*'
# почти правильно, с учетом предыдущего комментария
/// find . -iname '*tf*' ///

 23. Найти строки в файлах где есть комбинация букв “sec” в текущей папке
grep "sec" *
# ok

 24. Найти строки в файлах где есть комбинация букв “sec” в любом регистре в текущей папке
grep -i "sec" *
# ok

 25. Найти строки в файлах где есть только комбинация букв “sec” в текущей папке
grep -w "sec" *
# не согласен. Опция -w ищет по словам, то есть она найдет строку "bla sec bla".
# от нас просят найти только строки в которых есть "sec" и ничего более.
/// grep "sec$" * ///

 26. Найти строки в файлах где есть только комбинация букв “sec” в любом регистре в текущей папке
grep -iw "sec" *
# не согласен, см. предыдущий комментарий
/// grep -i "sec$" *///

 27. Найти строки в файлах где есть комбинация букв “second” в текущей папке
grep "second" *
# ok

 28. Найти строки в файлах где есть комбинация букв “second” в любом регистре в текущей папке
grep -i "second" *
# ok

 29. Найти строки в файлах где есть комбинация букв “second” во всех папках ниже уровнем
grep -r "second"
# ok. но будут обработаны и файлы в текущей папке, что, вероятно, будет неправильным результатом

 30. Найти только путь и название файла в строках которых есть комбинация букв “second” в текущей папке
grep -ls "second" *
# ok

 31. Найти все строки во всех файлах где нет комбинации “second”
grep -rv "second"
# ok

 32. Найти только название и путь к файлам где нет комбинации “second”
grep -rvl "second"
# ok

 33. Вывести в терминал 4 последних строк любого текстового файла
cd inner_dir_1
tail -4 tF_5.txt
# ok, но можно (иногда - нужно) использовать относительный путь к файлу
/// tail -4 ~/dir_1/inner_dir_1/tF_5.txt ///
 34. Вывести в терминал 4 первые строки любого текстового файла.
head -n4 tf_3.txt
# ok

 35. Команда в одну строку. Создать папку и создать текстовый файл с содержиммым.
mkdir inner_test;echo privet_omlet > test_tekst.txt
# ok. Тут единственное к чему можно придраться (а можно и не придираться :))- у нас фактически 2 команды, а не одна.
# Идеально будет так: mkdir -p inner_test && echo privet_omlet > test_tekst.txt
/// Буду иметь ввиду, спасибо///

 36. Команда в одну строку. Переместить в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -rsw "sec" >> inner_test/zapara.txt
# тут ошибка, наверное Вы просто не то написали
/// grep -rl "sec" * | xargs mv -t Pir ///

 37. Команда в одну строку. Скопировать в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -lr sec | xargs cp -t inner_test
# ok

 38. Команда в одну строку. Найти все строки c “sec” во всех текстовых файлах, скопировать и вставить эти строки в один новый созданный текстовый файл.
grep -ir --line-buffered sec >> tf_777.txt
# нет, неправильно в первой части.
# Опция -i включает регистронезависимый поиск, т.е. найдутся как строки sec, так и SEс
# Опция --line-buffered  влияет на производительность, больше вроде бы ни на что
# В таком виде команда найдет во всех файлах строки 'sec' независимо от регистра, и добавит их вместе с именами файлов к содержимому файла tf_777.txt
# Нам же нужны только строки 'sec' в нижнем регистре, и имена файлов копировать не нужно.
/// grep -r -h "^sec$" > tf_777.txt ///

 39. Команда в одну строку. Удалить текстовые файлы у которых в содержимом есть слово “sec”
grep -lr sec | xargs rm
# ok, но с замечением: про вложенные папки нам не говорили, а команда их обработает.
/// grep -l sec * | xargs rm///

 40. Просто вывести в терминал строку “Good job!!”
$ echo 'Good job v 2 chasa nochi!!'
# тут вообще всё отлично :) но ночью лучше отдыхать :)